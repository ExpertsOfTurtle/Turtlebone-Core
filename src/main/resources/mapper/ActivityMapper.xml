<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.turtlebone.core.repository.ActivityRepository" >
  <resultMap id="BaseResultMap" type="com.turtlebone.core.entity.Activity" >
    <id column="idactivity" property="idactivity" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="datetime" property="datetime" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="result" property="result" jdbcType="LONGVARCHAR" />
  </resultMap>

 <sql id="Base_Column_List" >
   `idactivity`,
   `username`,
   `datetime`,
   `type`,
   `description`,
   `result`
 </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from activity
    where idactivity = #{idactivity,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from activity
    where idactivity = #{idactivity,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.turtlebone.core.entity.Activity" >
    insert into activity ( 
     `idactivity`,
     `username`,
     `datetime`,
     `type`,
     `description`,
     `result`
    )
    values (
     #{idactivity,jdbcType=INTEGER},
     #{username,jdbcType=VARCHAR},
     #{datetime,jdbcType=VARCHAR},
     #{type,jdbcType=VARCHAR},
     #{description,jdbcType=VARCHAR},
     #{result,jdbcType=LONGVARCHAR}
 )
  </insert>
  
  
  
  <insert id="insertSelective" parameterType="com.turtlebone.core.entity.Activity" >
    insert into activity
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="idactivity != null" >
        `idactivity`,
      </if>
      <if test="username != null" >
        `username`,
      </if>
      <if test="datetime != null" >
        `datetime`,
      </if>
      <if test="type != null" >
        `type`,
      </if>
      <if test="description != null" >
        `description`,
      </if>
      <if test="result != null" >
        `result`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="idactivity != null" >
        #{idactivity,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="datetime != null" >
        #{datetime,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="result != null" >
        #{result,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.turtlebone.core.entity.Activity" >
    update activity
	  <set>
       <if test="username != null" >
        `username`= #{username,jdbcType=VARCHAR},
       </if>
       <if test="datetime != null" >
        `datetime`= #{datetime,jdbcType=VARCHAR},
       </if>
       <if test="type != null" >
        `type`= #{type,jdbcType=VARCHAR},
       </if>
       <if test="description != null" >
        `description`= #{description,jdbcType=VARCHAR},
       </if>
           <if test="result != null" >
        `result`= #{result,jdbcType=LONGVARCHAR},
       </if>
      </set>
    where idactivity = #{idactivity,jdbcType=INTEGER}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.turtlebone.core.entity.Activity" >
    update activity
    set 
   `result` = #{result,jdbcType=LONGVARCHAR},
       `username` = #{username,jdbcType=VARCHAR},
       `datetime` = #{datetime,jdbcType=VARCHAR},
       `type` = #{type,jdbcType=VARCHAR},
       `description` = #{description,jdbcType=VARCHAR}
     where idactivity = #{idactivity,jdbcType=INTEGER}
  </update>
  

  
  <select id="selectCount" resultType="java.lang.Integer" parameterType="com.turtlebone.core.entity.Activity" >
    select count(*) from activity
    <where >
            <if test="idactivity != null" >
        and `idactivity` = #{idactivity,jdbcType=INTEGER}
      </if>
            <if test="username != null" >
        and `username` = #{username,jdbcType=VARCHAR}
      </if>
            <if test="datetime != null" >
        and `datetime` = #{datetime,jdbcType=VARCHAR}
      </if>
            <if test="type != null" >
        and `type` = #{type,jdbcType=VARCHAR}
      </if>
            <if test="description != null" >
        and `description` = #{description,jdbcType=VARCHAR}
      </if>
            <if test="result != null" >
        and `result` = #{result,jdbcType=LONGVARCHAR}
      </if>
          </where>
  </select>

    <select id="selectPage" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from activity where 1 = 1 
        <if test="activity.idactivity != null" >
      and `idactivity` = #{activity.idactivity,jdbcType=INTEGER}
    </if>
        <if test="activity.username != null" >
      and `username` = #{activity.username,jdbcType=VARCHAR}
    </if>
        <if test="activity.datetime != null" >
      and `datetime` = #{activity.datetime,jdbcType=VARCHAR}
    </if>
        <if test="activity.type != null" >
      and `type` = #{activity.type,jdbcType=VARCHAR}
    </if>
        <if test="activity.description != null" >
      and `description` = #{activity.description,jdbcType=VARCHAR}
    </if>
        <if test="activity.result != null" >
      and `result` = #{activity.result,jdbcType=LONGVARCHAR}
    </if>
        <if test="pageable.sort != null" >
      order by 
      <foreach collection="pageable.sort" item="order" separator="," >
        <if test="
   order.property == 'idactivity' 
   || order.property == 'username'
   || order.property == 'datetime'
   || order.property == 'type'
   || order.property == 'description'
   || order.property == 'result'
        " >
        		${order.property} ${order.direction}
        </if>
      </foreach>
    </if>
    <if test="pageable.offset >= 0 and pageable.pageSize > 0" >
      limit ${pageable.offset}, ${pageable.pageSize}
    </if>
  </select>
 </mapper>
  

  
	